{"version":3,"file":"index.js","sources":["../src/TextField.tsx","../src/Switch.tsx","../src/Checkbox.tsx","../src/CheckboxWithLabel.tsx","../src/Select.tsx","../src/SimpleFileUpload.tsx","../src/RadioGroup.tsx","../src/InputBase.tsx"],"sourcesContent":["import * as React from 'react';\nimport MuiTextField, {\n  TextFieldProps as MuiTextFieldProps,\n} from '@material-ui/core/TextField';\nimport { FieldProps, getIn } from 'formik';\n\nexport interface TextFieldProps\n  extends FieldProps,\n    Omit<MuiTextFieldProps, 'name' | 'value' | 'error'> {}\n\nexport function fieldToTextField({\n  disabled,\n  field,\n  form: { isSubmitting, touched, errors },\n  ...props\n}: TextFieldProps): MuiTextFieldProps {\n  const fieldError = getIn(errors, field.name);\n  const showError = getIn(touched, field.name) && !!fieldError;\n\n  return {\n    ...props,\n    ...field,\n    error: showError,\n    helperText: showError ? fieldError : props.helperText,\n    disabled: disabled ?? isSubmitting,\n    variant: props.variant,\n  };\n}\n\nexport function TextField({ children, ...props }: TextFieldProps) {\n  return <MuiTextField {...fieldToTextField(props)}>{children}</MuiTextField>;\n}\n\nTextField.displayName = 'FormikMaterialUITextField';\n","import * as React from 'react';\nimport MuiSwitch, {\n  SwitchProps as MuiSwitchProps,\n} from '@material-ui/core/Switch';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface SwitchProps\n  extends FieldProps,\n    Omit<\n      MuiSwitchProps,\n      | 'checked'\n      | 'name'\n      | 'value'\n      | 'defaultChecked'\n      | 'form'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToSwitch({\n  disabled,\n  field,\n  form: { isSubmitting },\n  type,\n  ...props\n}: SwitchProps): MuiSwitchProps {\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n  };\n}\n\nexport function Switch(props: SwitchProps) {\n  return <MuiSwitch {...fieldToSwitch(props)} />;\n}\n\nSwitch.displayName = 'FormikMaterialUISwitch';\n","import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@material-ui/core/Checkbox';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      | 'name'\n      | 'value'\n      | 'error'\n      | 'form'\n      | 'checked'\n      | 'defaultChecked'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToCheckbox({\n  disabled,\n  field,\n  form: { isSubmitting },\n  type,\n  ...props\n}: CheckboxProps): MuiCheckboxProps {\n  const indeterminate = !Array.isArray(field.value) && field.value == null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    indeterminate,\n    ...props,\n    ...field,\n  };\n}\n\nexport function Checkbox(props: CheckboxProps) {\n  return <MuiCheckbox {...fieldToCheckbox(props)} />;\n}\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n","import * as React from 'react';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport FormControlLabel, {\n  FormControlLabelProps as MuiFormControlLabelProps,\n} from '@material-ui/core/FormControlLabel';\nimport { FieldProps } from 'formik';\n\nimport { CheckboxProps, fieldToCheckbox } from './Checkbox';\n\n/**\n * Exclude props that are passed directly to the control\n * https://github.com/mui-org/material-ui/blob/v3.1.1/packages/material-ui/src/FormControlLabel/FormControlLabel.js#L71\n */\nexport interface CheckboxWithLabelProps extends FieldProps, CheckboxProps {\n  Label: Omit<\n    MuiFormControlLabelProps,\n    'checked' | 'name' | 'value' | 'control'\n  >;\n}\n\nexport function CheckboxWithLabel<Val = unknown>({\n  Label,\n  ...props\n}: CheckboxWithLabelProps) {\n  return (\n    <FormControlLabel\n      control={<MuiCheckbox {...fieldToCheckbox(props)} />}\n      {...Label}\n    />\n  );\n}\n\nCheckboxWithLabel.displayName = 'FormikMaterialUICheckboxWithLabel';\n","import * as React from 'react';\nimport MuiSelect, {\n  SelectProps as MuiSelectProps,\n} from '@material-ui/core/Select';\nimport { FieldProps } from 'formik';\n\nexport interface SelectProps\n  extends FieldProps,\n    Omit<MuiSelectProps, 'name' | 'value'> {}\n\nexport function fieldToSelect({\n  disabled,\n  field,\n  form: { isSubmitting },\n  ...props\n}: SelectProps): MuiSelectProps {\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n  };\n}\n\nexport function Select(props: SelectProps) {\n  return <MuiSelect {...fieldToSelect(props)} />;\n}\n\nSelect.displayName = 'FormikMaterialUISelect';\n","import * as React from 'react';\nimport { FieldProps, getIn } from 'formik';\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl';\nimport InputLabel, { InputLabelProps } from '@material-ui/core/InputLabel';\nimport Input, { InputProps } from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport interface SimpleFileUploadProps extends FieldProps {\n  label: string;\n  disabled?: boolean;\n  InputProps?: Omit<InputProps, 'name' | 'type' | 'label'>;\n  InputLabelProps?: InputLabelProps;\n  FormControlProps?: FormControlProps;\n}\n\nexport const SimpleFileUpload = ({\n  field,\n  form: { isSubmitting, touched, errors, setFieldValue },\n  label,\n  disabled = false,\n  InputProps: inputProps,\n  InputLabelProps: inputLabelProps,\n  FormControlProps: formControlProps,\n}: SimpleFileUploadProps) => {\n  const error = getIn(touched, field.name) && getIn(errors, field.name);\n\n  return (\n    <FormControl {...formControlProps}>\n      {label && (\n        <InputLabel shrink error={!!error} {...inputLabelProps}>\n          {label}\n        </InputLabel>\n      )}\n      <Input\n        error={!!error}\n        inputProps={{\n          type: 'file',\n          disabled: disabled || isSubmitting,\n          name: field.name,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          onChange: (event: React.ChangeEvent<any>) => {\n            if (inputProps?.onChange) {\n              inputProps.onChange(event);\n            } else {\n              const file = event.currentTarget.files[0];\n              setFieldValue(field.name, file);\n            }\n          },\n        }}\n        {...inputProps}\n      />\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </FormControl>\n  );\n};\n","import * as React from 'react';\nimport MuiRadioGroup, {\n  RadioGroupProps as MuiRadioGroupProps,\n} from '@material-ui/core/RadioGroup';\nimport { FieldProps } from 'formik';\n\nexport interface RadioGroupProps\n  extends FieldProps,\n    Omit<MuiRadioGroupProps, 'name' | 'value'> {}\n\nexport function fieldToRadioGroup({\n  field,\n  // Exclude Form\n  form,\n  ...props\n}: RadioGroupProps): MuiRadioGroupProps {\n  return {\n    ...props,\n    ...field,\n  };\n}\n\nexport function RadioGroup(props: RadioGroupProps) {\n  return <MuiRadioGroup {...fieldToRadioGroup(props)} />;\n}\n\nRadioGroup.displayName = 'FormikMaterialUIRadioGroup';\n","import * as React from 'react';\nimport MuiInputBase, {\n  InputBaseProps as MuiInputBaseProps,\n} from '@material-ui/core/InputBase';\nimport { FieldProps } from 'formik';\n\nexport interface InputBaseProps\n  extends FieldProps,\n    Omit<MuiInputBaseProps, 'name' | 'value' | 'error'> {}\n\nexport function fieldToInputBase({\n  disabled,\n  field,\n  form: { isSubmitting },\n  ...props\n}: InputBaseProps): MuiInputBaseProps {\n  return {\n    disabled: disabled ?? isSubmitting,\n    ...props,\n    ...field,\n  };\n}\n\nexport function InputBase(props: InputBaseProps) {\n  return <MuiInputBase {...fieldToInputBase(props)} />;\n}\n\nInputBase.displayName = 'FormikMaterialUIInputBase';\n"],"names":["getIn","React.createElement"],"mappings":"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"}